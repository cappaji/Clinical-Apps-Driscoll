*** Settings ***
Documentation     All the Keywords required to perform the Home Page test.
...
...               Dependencies:
...               ElementLocators -> HomePageElementLocators.
...               ElementLocators -> EncounterFormElementLocators.
...               DataFiles -> HomePageData.txt
Library           ExtendedSelenium2Library
Library           Collections
Library           String
Library           DateTime
Library           Process
Resource          ../ElementLocators/HomePageElementLocators.txt
Resource          ../DataFiles/HomePageData.txt
Resource          ../ElementLocators/EncounterFormElementLocators.txt

*** Keywords ***
ToggleNavigation
    [Documentation]    Keyword to click on the Toggle Navigation button:
    ...
    ...    1) Click on toggle navigation button identified by ${ToggleNavBtn} to hide the navigation bar.
    ...    2) Click again on toggle navigation button identified by ${ToggleNavBtn} to show the navigation bar.
    ...
    Click Element    ${ToggleNavBtn}
    Click Element    ${ToggleNavBtn}

SearchForPatients
    [Arguments]    ${SearchContent}
    [Documentation]    Keyword to search for the Patients using the patient name:
    ...
    ...    1) Input the search text into the search for pateints input field by passing the search content.
    ...    2) Clear the search field text to verify if clearing the field works.
    ...    3) Input the search text one more time.
    ...    4) Click the search button
    ...    5) Pressing the keyboard Enter key to verify the the search is invoked.
    ...    6) Identifying the rows and column count of the search result table.
    ...    7) Create a List and add the text from the name column of the result table by parsing thorugh all the rows.
    ...    8) Verify if the List has all the values same as the patient name searched.
    ...    9) Go back to Homepage by clicking on the Encounters navigation element.
    ...
    Input Text    ${SearchPatientTextField}    ${SearchContent}
    Clear Element Text    ${SearchPatientTextField}
    Input Text    ${SearchPatientTextField}    ${SearchContent}
    Click Button    ${SearchPatientButton}
    Press Key    ${SearchPatientTextField}    \\13
    ${RowsCount}    Get Matching Xpath Count    //div[@id='patientSearch']//tr
    ${ColumnCount}    Get Matching Xpath Count    //div[@id='patientSearch']//tr//td
    ${ColumnDataList}    Create List
    : FOR    ${rowindex}    IN RANGE    1    ${RowsCount}
    \    ${columndata}    Get Text    //div[@id='patientSearch']//tr[${rowindex}]//td[2]
    \    Append To List    ${ColumnDataList}    ${columndata}
    Log    ${SearchContent}
    Log List    ${ColumnDataList}
    Capture Page Screenshot
    Should Not Be Empty    ${ColumnDataList}
    Click Element    ${EncountersNavShortcut}

IDCRHelpCenter
    [Documentation]    Keyword to test the help feature on the HomePage:
    ...
    ...    1) Clicking on the Help graphical icon element.
    ...    2) Waiting for 15s until the page has Live Chat Link element visible.
    ...    3) Clicking on Live Chat Link.
    ...    4) Switching the control onto the newly opened window the chat link redirect to.
    ...    5) Verifying the newly opened window by checked for the text on the page.
    ...    6) Closing the current newly opened chat window.
    ...    7) Switching the control back to Main window by selecting the window based on HomePage title.
    ...    8) Clicking on the Help graphical icon element again to test for other features within Help.
    ...    9) Waiting for 15s until the page has Contact Us Link element visible.
    ...    10) Clicking on Contact Us Link.
    ...    11) Switching the control onto the newly opened window to which the Contact Us link redirect to.
    ...    12) Verifying the newly opened window by checking if the Page title equals the Contact Us page title.
    ...    13) Closing the current newly opened Contact Us window.
    ...    14) Switching the control back to Main window by selecting the window based on HomePage title.
    ...
    Click Element    ${HelpDropdown}
    Wait Until Page Contains Element    ${HCLiveChatLink}    15s
    Click Element    ${HCLiveChatLink}
    Select Window    url=https://ssl.chatanexpert.com/in.php?c=52&g=155&fps=true&s=div_intouch_adv&info=true&i=From%20Support&exn=Jordan%20R.&exa=/images/avatar/p74.jpg&sup=true&phoneins=1166&emailins=1167&formins=1168&la_available=true
    Element Text Should Be    ${SSLChatExpertText}    Jordan R.
    Close Window
    Select Window    title=InTouch Clinical Apps
    Click Element    ${HelpDropdown}
    Wait Until Page Contains Element    ${HCContactUs}    15s
    Click Element    ${HCContactUs}
    Select Window    url=https://www.intouchhealth.com/about/contact-us
    ${CurrentWindowTitle}=    Get Title
    Should Be Equal As Strings    ${CurrentWindowTitle}    Contact Us | InTouch Health
    Close Window
    Select Window    title=InTouch Clinical Apps

ClickUserDropdown
    Text Operations

Text Operations
    [Arguments]    ${read}    ${click}    ${out}
    [Documentation]    This keyword with click or read the text elements in DOM Structure.
    ${output}=    Run Keyword If    '${read}' == 'yes'    Get Text    //span[text(),"${out}"]
    Run Keyword If    '${click}' == 'yes'    Click Element    //span[text(),"${output}"]

ClickNewEncounterButton
    [Documentation]    Keyword to click the New Encounter form button:
    ...
    ...    1) Clicks the new encounter button identified by ${NewEncButton}.
    ...    2) Verifies the action by checking if the destination page has the text Pediatric Encounter text.
    ...
    Click Button    ${NewEncBtn}
    Page Should Contain Element    ${PediatricEncounterTextElement}
